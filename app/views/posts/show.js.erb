var regex = /\/(.*)\//

function enablePost(e) {
  const submit = e.currentTarget.parentElement.nextElementSibling;
  const submitCache = document.querySelector('.submit-cache');
  if (e.currentTarget.value.match(regex)) {
    submit.style.opacity = "1"
    submit.disabled = false
    submitCache.style.display = "none"
  } else {
    submit.style.opacity = "0.5"
    submit.disabled = true
    submitCache.style.display = "block"
  }
}

function displayErrorMessage(e) {
  const alert = document.querySelector('.alert-info');
  const input = e.currentTarget.previousElementSibling
  if (!input.value.match(regex) && !alert) {
    const body = document.querySelector('body');
    body.insertAdjacentHTML('beforeend', `<%= render 'shared/flash-message-format' %>`)
  } else if (input.value.match(regex)) {
    e.currentTarget.style.zIndex = "-1";
    alert.remove();
  }
}

function focusOnMessageBody(messageBody) {
  document.querySelector('.text-border').addEventListener('click', e => messageBody.focus());
}

function manageListeners() {
  const messageBody = document.getElementById('message_body');
  const submitCache = document.querySelector('.submit-cache');

  focusOnMessageBody(messageBody);
  submitCache.addEventListener('click', displayErrorMessage)
  messageBody.addEventListener('keyup', enablePost);
}

function appendConversationShow(show) {
  const postItem = document.querySelector('[data-post-id="<%= @post.id %>"]');
  postItem.classList.add('show-open');
  postItem.insertAdjacentHTML('afterend', show);
  manageListeners()

}

appendConversationShow(`<%= render 'post_comments', post: @post %>`);
